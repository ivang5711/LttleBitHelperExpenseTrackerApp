@page
@model IndexModel

@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager

@{
    var user = await UserManager.GetUserAsync(User);
}

@{
    ViewData["Title"] = "Home page";
    List<string> tmpList = new List<string>();
    List<float> tmpIntList = new List<float>();
}

<div>
    <div style="margin: 20px; display: flex; justify-content: center;">
        <canvas id="myChart" style="max-inline-size: 800px;"></canvas>
        <script type="text/javascript">
            var xValues = [];
            var yValues = [];
            @foreach (var item in IndexModel.UsersList.FinalList)
            {
                if (item.ExpenseType is null)
                {
                    throw new ArgumentException(nameof(item));
                }

                tmpList.Add(item.ExpenseType);
                tmpIntList.Add(item.ExpenseAmount);
                var k1 = item.ExpenseType;
                var i2 = item.ExpenseAmount;
                <text>
                    xValues.push('@k1');
                yValues.push(@i2);
                </text>
            }

                                                var barColors = [
                "#b91d47",
                "#00aba9",
                "#235790",
                "#e8c3b9",
                "#1b9745",
                "#1e7145"
            ];

            new Chart("myChart", {
                type: "pie",
                data: {
                    labels: xValues,
                    datasets: [{
                        backgroundColor: barColors,
                        data: yValues
                    }]
                },
                options: {
                    title: {
                        display: true,
                        text: "Expenses by type diagram"
                    }
                }
            });
        </script>
    </div>

    <p style="text-align: center">All expenses shown in your default currency: @IndexModel.DefaultCurrency</p>
    <table class="table">
        <tr class="table_header">
            <th>#</th>
            <th>Expense type</th>
            <th>Expense amount</th>
        </tr>
        @{
            int counter = 0;
            foreach (var s in IndexModel.UsersList.FinalList)
            {
                if (s.ExpenseType is null)
                {
                    throw new ArgumentException(nameof(s.ExpenseType));
                }

                counter++;
                <tr style="opacity: 0.8; border-bottom:1px solid #000000; height: 40px; border-spacing: 10px;">
                    <td>@counter</td>
                    <td>@s.ExpenseType.ToString()</td>
                    <td>@s.ExpenseAmount.ToString()</td>
                </tr>
            }
        }

    </table>
</div>